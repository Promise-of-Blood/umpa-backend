name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: ./gradlew build -Pspring.profiles.active=prod

      - name: Test with Gradle
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: ./gradlew test -Pspring.profiles.active=prod

      - name: Build and package
        run: ./gradlew bootJar -Pspring.profiles.active=prod

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: build/libs/*.jar

  # Deployment job - uncomment and configure when ready to deploy
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
  #   
  #   steps:
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: Package
  #         path: ./
  #     
  #     - name: Deploy to production server
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USERNAME }}
  #         key: ${{ secrets.DEPLOY_SSH_KEY }}
  #         source: "*.jar"
  #         target: "/path/to/deployment/directory"
  #     
  #     - name: Execute remote commands
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USERNAME }}
  #         key: ${{ secrets.DEPLOY_SSH_KEY }}
  #         script: |
  #           cd /path/to/deployment/directory
  #           # Stop the existing application
  #           # Start the new application with production profile
  #           java -jar umpa-backend-*.jar --spring.profiles.active=prod
